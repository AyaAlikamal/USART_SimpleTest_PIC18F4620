Version 4.0 HI-TECH Software Intermediate Code
"13 MCAL_Layer/UART/hal_uart.c
[; ;MCAL_Layer/UART/hal_uart.c: 13: Std_ReturnType USART_ASYNC_Init(const usart_t *eusar){
[c E3028 0 1 2 3 4 5 .. ]
[n E3028 . BAUDRATE_ASYNC_8BIT_LOW_SPEED BAUDRATE_ASYNC_8BIT_HIGH_SPEED BAUDRATE_ASYNC_16BIT_LOW_SPEED BAUDRATE_ASYNC_16BIT_HIGH_SPEED BAUDRATE_SYNC_8BIT BAUDRATE_SYNC_16BIT  ]
"65 MCAL_Layer/UART/hal_uart.h
[; ;MCAL_Layer/UART/hal_uart.h: 65: typedef struct {
[s S274 :5 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S274 . usart_tx_reserved usart_tx_enable usart_tx_interrupt_enable usart_tx_9bit_enable ]
"72
[; ;MCAL_Layer/UART/hal_uart.h: 72: typedef struct {
[s S275 :5 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S275 . usart_rx_reserved usart_rx_enable usart_rx_interrupt_enable usart_rx_9bit_enable ]
"80
[; ;MCAL_Layer/UART/hal_uart.h: 80:     struct{
[s S277 :6 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S277 . usart_tx_reserved usart_ferr usart_oerr ]
"79
[; ;MCAL_Layer/UART/hal_uart.h: 79: typedef union{
[u S276 `S277 1 `uc 1 ]
[n S276 . . status ]
[v F3063 `(v ~T0 @X0 0 tf ]
[v F3065 `(v ~T0 @X0 0 tf ]
[v F3067 `(v ~T0 @X0 0 tf ]
[v F3069 `(v ~T0 @X0 0 tf ]
"89
[; ;MCAL_Layer/UART/hal_uart.h: 89: typedef struct{
[s S278 `ul 1 `E3028 1 `S274 1 `S275 1 `S276 1 `*F3063 1 `*F3065 1 `*F3067 1 `*F3069 1 ]
[n S278 . baudrate baudrate_gen_cfg tx_cfg rx_cfg error_status EUSART_TX_DEFUALTINTERRUPT_HUNDELER EUSART_RX_DEFUALTINTERRUPT_HUNDELER EUSART_Framming_Error_HUNDELER EUSART_Overrun_Error_HUNDELER ]
"3031 MCAL_Layer/UART/../GPIO/../../../../Embeded-Compiler/pic/include/proc/pic18f4620.h
[s S107 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S107 . RX9D OERR FERR ADDEN CREN SREN RX9 SPEN ]
"3041
[s S108 :3 `uc 1 :1 `uc 1 ]
[n S108 . . ADEN ]
"3045
[s S109 :5 `uc 1 :1 `uc 1 ]
[n S109 . . SRENA ]
"3049
[s S110 :6 `uc 1 :1 `uc 1 ]
[n S110 . . RC8_9 ]
"3053
[s S111 :6 `uc 1 :1 `uc 1 ]
[n S111 . . RC9 ]
"3057
[s S112 :1 `uc 1 ]
[n S112 . RCD8 ]
"3030
[u S106 `S107 1 `S108 1 `S109 1 `S110 1 `S111 1 `S112 1 ]
[n S106 . . . . . . . ]
"3061
[v _RCSTAbits `VS106 ~T0 @X0 0 e@4011 ]
"1835
[s S65 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S65 . TRISC0 TRISC1 TRISC2 TRISC3 TRISC4 TRISC5 TRISC6 TRISC7 ]
"1845
[s S66 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S66 . RC0 RC1 RC2 RC3 RC4 RC5 RC6 RC7 ]
"1834
[u S64 `S65 1 `S66 1 ]
[n S64 . . . ]
"1856
[v _TRISCbits `VS64 ~T0 @X0 0 e@3988 ]
"10 MCAL_Layer/UART/hal_uart.c
[; ;MCAL_Layer/UART/hal_uart.c: 10: static void EUSART_BaudRate_Calculations(const usart_t *eusar);
[v _EUSART_BaudRate_Calculations `(v ~T0 @X0 0 sf1`*CS278 ]
"12
[; ;MCAL_Layer/UART/hal_uart.c: 12: static void EUSART_ASYNC_TX_Init(const usart_t *eusar);
[v _EUSART_ASYNC_TX_Init `(v ~T0 @X0 0 sf1`*CS278 ]
"11
[; ;MCAL_Layer/UART/hal_uart.c: 11: static void EUSART_ASYNC_RX_Init(const usart_t *eusar);
[v _EUSART_ASYNC_RX_Init `(v ~T0 @X0 0 sf1`*CS278 ]
"3498 MCAL_Layer/UART/../GPIO/../../../../Embeded-Compiler/pic/include/proc/pic18f4620.h
[v _RCREG `Vuc ~T0 @X0 0 e@4014 ]
"2580
[s S89 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S89 . TMR1IF TMR2IF CCP1IF SSPIF TXIF RCIF ADIF PSPIF ]
"2590
[s S90 :4 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S90 . . TX1IF RC1IF ]
"2579
[u S88 `S89 1 `S90 1 ]
[n S88 . . . ]
"2596
[v _PIR1bits `VS88 ~T0 @X0 0 e@3998 ]
"3486
[v _TXREG `Vuc ~T0 @X0 0 e@4013 ]
"3241
[s S121 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S121 . TX9D TRMT BRGH SENDB SYNC TXEN TX9 CSRC ]
"3251
[s S122 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S122 . TX9D1 TRMT1 BRGH1 SENDB1 SYNC1 TXEN1 TX91 CSRC1 ]
"3261
[s S123 :6 `uc 1 :1 `uc 1 ]
[n S123 . . TX8_9 ]
"3265
[s S124 :1 `uc 1 ]
[n S124 . TXD8 ]
"3240
[u S120 `S121 1 `S122 1 `S123 1 `S124 1 ]
[n S120 . . . . . ]
"3269
[v _TXSTAbits `VS120 ~T0 @X0 0 e@4012 ]
"3994
[s S151 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S151 . ABDEN WUE . BRG16 TXCKP RXDTP RCIDL ABDOVF ]
"4004
[s S152 :4 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S152 . . SCKP RXCKP RCMT ]
"4010
[s S153 :1 `uc 1 :1 `uc 1 ]
[n S153 . . W4E ]
"3993
[u S150 `S151 1 `S152 1 `S153 1 ]
[n S150 . . . . ]
"4015
[v _BAUDCONbits `VS150 ~T0 @X0 0 e@4024 ]
"3510
[v _SPBRG `Vuc ~T0 @X0 0 e@4015 ]
"3522
[v _SPBRGH `Vuc ~T0 @X0 0 e@4016 ]
"2503
[s S86 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S86 . TMR1IE TMR2IE CCP1IE SSPIE TXIE RCIE ADIE PSPIE ]
"2513
[s S87 :4 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S87 . . TX1IE RC1IE ]
"2502
[u S85 `S86 1 `S87 1 ]
[n S85 . . . ]
"2519
[v _PIE1bits `VS85 ~T0 @X0 0 e@3997 ]
"54 MCAL_Layer/UART/../GPIO/../../../../Embeded-Compiler/pic/include/proc/pic18f4620.h
[; <" PORTA equ 0F80h ;# ">
"191
[; <" PORTB equ 0F81h ;# ">
"362
[; <" PORTC equ 0F82h ;# ">
"537
[; <" PORTD equ 0F83h ;# ">
"679
[; <" PORTE equ 0F84h ;# ">
"882
[; <" LATA equ 0F89h ;# ">
"994
[; <" LATB equ 0F8Ah ;# ">
"1106
[; <" LATC equ 0F8Bh ;# ">
"1218
[; <" LATD equ 0F8Ch ;# ">
"1330
[; <" LATE equ 0F8Dh ;# ">
"1382
[; <" TRISA equ 0F92h ;# ">
"1387
[; <" DDRA equ 0F92h ;# ">
"1604
[; <" TRISB equ 0F93h ;# ">
"1609
[; <" DDRB equ 0F93h ;# ">
"1826
[; <" TRISC equ 0F94h ;# ">
"1831
[; <" DDRC equ 0F94h ;# ">
"2048
[; <" TRISD equ 0F95h ;# ">
"2053
[; <" DDRD equ 0F95h ;# ">
"2270
[; <" TRISE equ 0F96h ;# ">
"2275
[; <" DDRE equ 0F96h ;# ">
"2434
[; <" OSCTUNE equ 0F9Bh ;# ">
"2499
[; <" PIE1 equ 0F9Dh ;# ">
"2576
[; <" PIR1 equ 0F9Eh ;# ">
"2653
[; <" IPR1 equ 0F9Fh ;# ">
"2730
[; <" PIE2 equ 0FA0h ;# ">
"2796
[; <" PIR2 equ 0FA1h ;# ">
"2862
[; <" IPR2 equ 0FA2h ;# ">
"2928
[; <" EECON1 equ 0FA6h ;# ">
"2994
[; <" EECON2 equ 0FA7h ;# ">
"3001
[; <" EEDATA equ 0FA8h ;# ">
"3008
[; <" EEADR equ 0FA9h ;# ">
"3015
[; <" EEADRH equ 0FAAh ;# ">
"3022
[; <" RCSTA equ 0FABh ;# ">
"3027
[; <" RCSTA1 equ 0FABh ;# ">
"3232
[; <" TXSTA equ 0FACh ;# ">
"3237
[; <" TXSTA1 equ 0FACh ;# ">
"3488
[; <" TXREG equ 0FADh ;# ">
"3493
[; <" TXREG1 equ 0FADh ;# ">
"3500
[; <" RCREG equ 0FAEh ;# ">
"3505
[; <" RCREG1 equ 0FAEh ;# ">
"3512
[; <" SPBRG equ 0FAFh ;# ">
"3517
[; <" SPBRG1 equ 0FAFh ;# ">
"3524
[; <" SPBRGH equ 0FB0h ;# ">
"3531
[; <" T3CON equ 0FB1h ;# ">
"3643
[; <" TMR3 equ 0FB2h ;# ">
"3650
[; <" TMR3L equ 0FB2h ;# ">
"3657
[; <" TMR3H equ 0FB3h ;# ">
"3664
[; <" CMCON equ 0FB4h ;# ">
"3754
[; <" CVRCON equ 0FB5h ;# ">
"3833
[; <" ECCP1AS equ 0FB6h ;# ">
"3915
[; <" PWM1CON equ 0FB7h ;# ">
"3985
[; <" BAUDCON equ 0FB8h ;# ">
"3990
[; <" BAUDCTL equ 0FB8h ;# ">
"4157
[; <" CCP2CON equ 0FBAh ;# ">
"4236
[; <" CCPR2 equ 0FBBh ;# ">
"4243
[; <" CCPR2L equ 0FBBh ;# ">
"4250
[; <" CCPR2H equ 0FBCh ;# ">
"4257
[; <" CCP1CON equ 0FBDh ;# ">
"4354
[; <" CCPR1 equ 0FBEh ;# ">
"4361
[; <" CCPR1L equ 0FBEh ;# ">
"4368
[; <" CCPR1H equ 0FBFh ;# ">
"4375
[; <" ADCON2 equ 0FC0h ;# ">
"4446
[; <" ADCON1 equ 0FC1h ;# ">
"4531
[; <" ADCON0 equ 0FC2h ;# ">
"4650
[; <" ADRES equ 0FC3h ;# ">
"4657
[; <" ADRESL equ 0FC3h ;# ">
"4664
[; <" ADRESH equ 0FC4h ;# ">
"4671
[; <" SSPCON2 equ 0FC5h ;# ">
"4733
[; <" SSPCON1 equ 0FC6h ;# ">
"4803
[; <" SSPSTAT equ 0FC7h ;# ">
"5024
[; <" SSPADD equ 0FC8h ;# ">
"5031
[; <" SSPBUF equ 0FC9h ;# ">
"5038
[; <" T2CON equ 0FCAh ;# ">
"5109
[; <" PR2 equ 0FCBh ;# ">
"5114
[; <" MEMCON equ 0FCBh ;# ">
"5219
[; <" TMR2 equ 0FCCh ;# ">
"5226
[; <" T1CON equ 0FCDh ;# ">
"5329
[; <" TMR1 equ 0FCEh ;# ">
"5336
[; <" TMR1L equ 0FCEh ;# ">
"5343
[; <" TMR1H equ 0FCFh ;# ">
"5350
[; <" RCON equ 0FD0h ;# ">
"5483
[; <" WDTCON equ 0FD1h ;# ">
"5511
[; <" HLVDCON equ 0FD2h ;# ">
"5516
[; <" LVDCON equ 0FD2h ;# ">
"5781
[; <" OSCCON equ 0FD3h ;# ">
"5858
[; <" T0CON equ 0FD5h ;# ">
"5935
[; <" TMR0 equ 0FD6h ;# ">
"5942
[; <" TMR0L equ 0FD6h ;# ">
"5949
[; <" TMR0H equ 0FD7h ;# ">
"5956
[; <" STATUS equ 0FD8h ;# ">
"6027
[; <" FSR2 equ 0FD9h ;# ">
"6034
[; <" FSR2L equ 0FD9h ;# ">
"6041
[; <" FSR2H equ 0FDAh ;# ">
"6048
[; <" PLUSW2 equ 0FDBh ;# ">
"6055
[; <" PREINC2 equ 0FDCh ;# ">
"6062
[; <" POSTDEC2 equ 0FDDh ;# ">
"6069
[; <" POSTINC2 equ 0FDEh ;# ">
"6076
[; <" INDF2 equ 0FDFh ;# ">
"6083
[; <" BSR equ 0FE0h ;# ">
"6090
[; <" FSR1 equ 0FE1h ;# ">
"6097
[; <" FSR1L equ 0FE1h ;# ">
"6104
[; <" FSR1H equ 0FE2h ;# ">
"6111
[; <" PLUSW1 equ 0FE3h ;# ">
"6118
[; <" PREINC1 equ 0FE4h ;# ">
"6125
[; <" POSTDEC1 equ 0FE5h ;# ">
"6132
[; <" POSTINC1 equ 0FE6h ;# ">
"6139
[; <" INDF1 equ 0FE7h ;# ">
"6146
[; <" WREG equ 0FE8h ;# ">
"6158
[; <" FSR0 equ 0FE9h ;# ">
"6165
[; <" FSR0L equ 0FE9h ;# ">
"6172
[; <" FSR0H equ 0FEAh ;# ">
"6179
[; <" PLUSW0 equ 0FEBh ;# ">
"6186
[; <" PREINC0 equ 0FECh ;# ">
"6193
[; <" POSTDEC0 equ 0FEDh ;# ">
"6200
[; <" POSTINC0 equ 0FEEh ;# ">
"6207
[; <" INDF0 equ 0FEFh ;# ">
"6214
[; <" INTCON3 equ 0FF0h ;# ">
"6306
[; <" INTCON2 equ 0FF1h ;# ">
"6376
[; <" INTCON equ 0FF2h ;# ">
"6493
[; <" PROD equ 0FF3h ;# ">
"6500
[; <" PRODL equ 0FF3h ;# ">
"6507
[; <" PRODH equ 0FF4h ;# ">
"6514
[; <" TABLAT equ 0FF5h ;# ">
"6523
[; <" TBLPTR equ 0FF6h ;# ">
"6530
[; <" TBLPTRL equ 0FF6h ;# ">
"6537
[; <" TBLPTRH equ 0FF7h ;# ">
"6544
[; <" TBLPTRU equ 0FF8h ;# ">
"6553
[; <" PCLAT equ 0FF9h ;# ">
"6560
[; <" PC equ 0FF9h ;# ">
"6567
[; <" PCL equ 0FF9h ;# ">
"6574
[; <" PCLATH equ 0FFAh ;# ">
"6581
[; <" PCLATU equ 0FFBh ;# ">
"6588
[; <" STKPTR equ 0FFCh ;# ">
"6694
[; <" TOS equ 0FFDh ;# ">
"6701
[; <" TOSL equ 0FFDh ;# ">
"6708
[; <" TOSH equ 0FFEh ;# ">
"6715
[; <" TOSU equ 0FFFh ;# ">
"13 MCAL_Layer/UART/hal_uart.c
[; ;MCAL_Layer/UART/hal_uart.c: 13: Std_ReturnType USART_ASYNC_Init(const usart_t *eusar){
[v _USART_ASYNC_Init `(uc ~T0 @X0 1 ef1`*CS278 ]
{
[e :U _USART_ASYNC_Init ]
[v _eusar `*CS278 ~T0 @X0 1 r1 ]
[f ]
"14
[; ;MCAL_Layer/UART/hal_uart.c: 14: Std_ReturnType ret = (Std_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"16
[; ;MCAL_Layer/UART/hal_uart.c: 16: if(eusar == ((void*)0)){
[e $ ! == _eusar -> -> -> 0 `i `*v `*CS278 280  ]
{
"17
[; ;MCAL_Layer/UART/hal_uart.c: 17: ret = (Std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"18
[; ;MCAL_Layer/UART/hal_uart.c: 18: }
}
[e $U 281  ]
"19
[; ;MCAL_Layer/UART/hal_uart.c: 19: else{
[e :U 280 ]
{
"20
[; ;MCAL_Layer/UART/hal_uart.c: 20:     RCSTAbits.SPEN = 0;
[e = . . _RCSTAbits 0 7 -> -> 0 `i `uc ]
"21
[; ;MCAL_Layer/UART/hal_uart.c: 21:     TRISCbits.RC6 = 1;
[e = . . _TRISCbits 1 6 -> -> 1 `i `uc ]
"22
[; ;MCAL_Layer/UART/hal_uart.c: 22:     TRISCbits.RC7 = 1;
[e = . . _TRISCbits 1 7 -> -> 1 `i `uc ]
"23
[; ;MCAL_Layer/UART/hal_uart.c: 23:     EUSART_BaudRate_Calculations(eusar);
[e ( _EUSART_BaudRate_Calculations (1 _eusar ]
"24
[; ;MCAL_Layer/UART/hal_uart.c: 24:     EUSART_ASYNC_TX_Init(eusar);
[e ( _EUSART_ASYNC_TX_Init (1 _eusar ]
"25
[; ;MCAL_Layer/UART/hal_uart.c: 25:     EUSART_ASYNC_RX_Init(eusar);
[e ( _EUSART_ASYNC_RX_Init (1 _eusar ]
"26
[; ;MCAL_Layer/UART/hal_uart.c: 26:     RCSTAbits.SPEN = 1;
[e = . . _RCSTAbits 0 7 -> -> 1 `i `uc ]
"27
[; ;MCAL_Layer/UART/hal_uart.c: 27: }
}
[e :U 281 ]
"28
[; ;MCAL_Layer/UART/hal_uart.c: 28: return ret;
[e ) _ret ]
[e $UE 279  ]
"29
[; ;MCAL_Layer/UART/hal_uart.c: 29: }
[e :UE 279 ]
}
"30
[; ;MCAL_Layer/UART/hal_uart.c: 30: Std_ReturnType USART_ASYNC_DeInit(const usart_t *eusar){
[v _USART_ASYNC_DeInit `(uc ~T0 @X0 1 ef1`*CS278 ]
{
[e :U _USART_ASYNC_DeInit ]
[v _eusar `*CS278 ~T0 @X0 1 r1 ]
[f ]
"31
[; ;MCAL_Layer/UART/hal_uart.c: 31: Std_ReturnType ret = (Std_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"33
[; ;MCAL_Layer/UART/hal_uart.c: 33: if(eusar == ((void*)0)){
[e $ ! == _eusar -> -> -> 0 `i `*v `*CS278 283  ]
{
"34
[; ;MCAL_Layer/UART/hal_uart.c: 34: ret = (Std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"35
[; ;MCAL_Layer/UART/hal_uart.c: 35: }
}
[e $U 284  ]
"36
[; ;MCAL_Layer/UART/hal_uart.c: 36: else{
[e :U 283 ]
{
"37
[; ;MCAL_Layer/UART/hal_uart.c: 37:      RCSTAbits.SPEN = 0;
[e = . . _RCSTAbits 0 7 -> -> 0 `i `uc ]
"38
[; ;MCAL_Layer/UART/hal_uart.c: 38: }
}
[e :U 284 ]
"39
[; ;MCAL_Layer/UART/hal_uart.c: 39: return ret;
[e ) _ret ]
[e $UE 282  ]
"40
[; ;MCAL_Layer/UART/hal_uart.c: 40: }
[e :UE 282 ]
}
"41
[; ;MCAL_Layer/UART/hal_uart.c: 41: Std_ReturnType USART_ASYNC_ReadByte_Blocking( uint_8 *data){
[v _USART_ASYNC_ReadByte_Blocking `(uc ~T0 @X0 1 ef1`*uc ]
{
[e :U _USART_ASYNC_ReadByte_Blocking ]
[v _data `*uc ~T0 @X0 1 r1 ]
[f ]
"42
[; ;MCAL_Layer/UART/hal_uart.c: 42: Std_ReturnType ret = (Std_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"43
[; ;MCAL_Layer/UART/hal_uart.c: 43:  while(!PIR1bits.RCIF){
[e $U 286  ]
[e :U 287 ]
{
"44
[; ;MCAL_Layer/UART/hal_uart.c: 44:     *data = RCREG;
[e = *U _data _RCREG ]
"45
[; ;MCAL_Layer/UART/hal_uart.c: 45:  }
}
[e :U 286 ]
"43
[; ;MCAL_Layer/UART/hal_uart.c: 43:  while(!PIR1bits.RCIF){
[e $ ! != -> . . _PIR1bits 0 5 `i -> 0 `i 287  ]
[e :U 288 ]
"47
[; ;MCAL_Layer/UART/hal_uart.c: 47: return ret;
[e ) _ret ]
[e $UE 285  ]
"48
[; ;MCAL_Layer/UART/hal_uart.c: 48: }
[e :UE 285 ]
}
"49
[; ;MCAL_Layer/UART/hal_uart.c: 49: Std_ReturnType USART_ASYNC_ReadByte_Non_Blocking(uint_8 *data){
[v _USART_ASYNC_ReadByte_Non_Blocking `(uc ~T0 @X0 1 ef1`*uc ]
{
[e :U _USART_ASYNC_ReadByte_Non_Blocking ]
[v _data `*uc ~T0 @X0 1 r1 ]
[f ]
"50
[; ;MCAL_Layer/UART/hal_uart.c: 50: Std_ReturnType ret = (Std_ReturnType)0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"51
[; ;MCAL_Layer/UART/hal_uart.c: 51:  if(PIR1bits.RCIF == 1){
[e $ ! == -> . . _PIR1bits 0 5 `i -> 1 `i 290  ]
{
"52
[; ;MCAL_Layer/UART/hal_uart.c: 52:     *data = RCREG;
[e = *U _data _RCREG ]
"53
[; ;MCAL_Layer/UART/hal_uart.c: 53:     ret = (Std_ReturnType)0x01;
[e = _ret -> -> 1 `i `uc ]
"54
[; ;MCAL_Layer/UART/hal_uart.c: 54:  }
}
[e $U 291  ]
"55
[; ;MCAL_Layer/UART/hal_uart.c: 55:  else{
[e :U 290 ]
{
"56
[; ;MCAL_Layer/UART/hal_uart.c: 56:      ret = (Std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"57
[; ;MCAL_Layer/UART/hal_uart.c: 57:  }
}
[e :U 291 ]
"58
[; ;MCAL_Layer/UART/hal_uart.c: 58: return ret;
[e ) _ret ]
[e $UE 289  ]
"60
[; ;MCAL_Layer/UART/hal_uart.c: 60: }
[e :UE 289 ]
}
"61
[; ;MCAL_Layer/UART/hal_uart.c: 61: Std_ReturnType USART_ASYNC_WriteByte_Blocking(uint_8 data){
[v _USART_ASYNC_WriteByte_Blocking `(uc ~T0 @X0 1 ef1`uc ]
{
[e :U _USART_ASYNC_WriteByte_Blocking ]
[v _data `uc ~T0 @X0 1 r1 ]
[f ]
"62
[; ;MCAL_Layer/UART/hal_uart.c: 62: Std_ReturnType ret = (Std_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"63
[; ;MCAL_Layer/UART/hal_uart.c: 63:     while(!TXSTAbits.TRMT){
[e $U 293  ]
[e :U 294 ]
{
"64
[; ;MCAL_Layer/UART/hal_uart.c: 64:     TXREG = data;
[e = _TXREG _data ]
"65
[; ;MCAL_Layer/UART/hal_uart.c: 65:     }
}
[e :U 293 ]
"63
[; ;MCAL_Layer/UART/hal_uart.c: 63:     while(!TXSTAbits.TRMT){
[e $ ! != -> . . _TXSTAbits 0 1 `i -> 0 `i 294  ]
[e :U 295 ]
"66
[; ;MCAL_Layer/UART/hal_uart.c: 66: return ret;
[e ) _ret ]
[e $UE 292  ]
"67
[; ;MCAL_Layer/UART/hal_uart.c: 67: }
[e :UE 292 ]
}
"68
[; ;MCAL_Layer/UART/hal_uart.c: 68: Std_ReturnType USART_ASYNC_WriteString_Blocking(uint_8 *data, uint_16 str_len){
[v _USART_ASYNC_WriteString_Blocking `(uc ~T0 @X0 1 ef2`*uc`us ]
{
[e :U _USART_ASYNC_WriteString_Blocking ]
[v _data `*uc ~T0 @X0 1 r1 ]
[v _str_len `us ~T0 @X0 1 r2 ]
[f ]
"69
[; ;MCAL_Layer/UART/hal_uart.c: 69: Std_ReturnType ret = (Std_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"70
[; ;MCAL_Layer/UART/hal_uart.c: 70: uint_16 L_str_length = 0;
[v _L_str_length `us ~T0 @X0 1 a ]
[e = _L_str_length -> -> 0 `i `us ]
"71
[; ;MCAL_Layer/UART/hal_uart.c: 71: for(L_str_length = 0 ; L_str_length < str_len ; L_str_length++){
{
[e = _L_str_length -> -> 0 `i `us ]
[e $U 300  ]
[e :U 297 ]
{
"72
[; ;MCAL_Layer/UART/hal_uart.c: 72: USART_ASYNC_WriteByte_Blocking(data[L_str_length]);
[e ( _USART_ASYNC_WriteByte_Blocking (1 *U + _data * -> _L_str_length `ux -> -> # *U _data `ui `ux ]
"73
[; ;MCAL_Layer/UART/hal_uart.c: 73: }
}
[e ++ _L_str_length -> -> 1 `i `us ]
[e :U 300 ]
[e $ < -> _L_str_length `ui -> _str_len `ui 297  ]
[e :U 298 ]
}
"74
[; ;MCAL_Layer/UART/hal_uart.c: 74: return ret;
[e ) _ret ]
[e $UE 296  ]
"75
[; ;MCAL_Layer/UART/hal_uart.c: 75: }
[e :UE 296 ]
}
"77
[; ;MCAL_Layer/UART/hal_uart.c: 77: static void EUSART_BaudRate_Calculations(const usart_t *eusar){
[v _EUSART_BaudRate_Calculations `(v ~T0 @X0 1 sf1`*CS278 ]
{
[e :U _EUSART_BaudRate_Calculations ]
[v _eusar `*CS278 ~T0 @X0 1 r1 ]
[f ]
"78
[; ;MCAL_Layer/UART/hal_uart.c: 78:     float BaudRate_Temp = 0;
[v _BaudRate_Temp `f ~T0 @X0 1 a ]
[e = _BaudRate_Temp -> -> 0 `i `f ]
"79
[; ;MCAL_Layer/UART/hal_uart.c: 79:     switch(eusar->baudrate_gen_cfg){
[e $U 303  ]
{
"80
[; ;MCAL_Layer/UART/hal_uart.c: 80:         case BAUDRATE_ASYNC_8BIT_LOW_SPEED:
[e :U 304 ]
"81
[; ;MCAL_Layer/UART/hal_uart.c: 81:             TXSTAbits.SYNC = 0;
[e = . . _TXSTAbits 0 4 -> -> 0 `i `uc ]
"82
[; ;MCAL_Layer/UART/hal_uart.c: 82:             TXSTAbits.BRGH = 0;
[e = . . _TXSTAbits 0 2 -> -> 0 `i `uc ]
"83
[; ;MCAL_Layer/UART/hal_uart.c: 83:             BAUDCONbits.BRG16 = 0;
[e = . . _BAUDCONbits 0 3 -> -> 0 `i `uc ]
"84
[; ;MCAL_Layer/UART/hal_uart.c: 84:             BaudRate_Temp = ((8000000UL /(float)eusar->baudrate)/ 64) - 1;
[e = _BaudRate_Temp - / / -> -> 8000000 `ul `f -> . *U _eusar 0 `f -> -> 64 `i `f -> -> 1 `i `f ]
"86
[; ;MCAL_Layer/UART/hal_uart.c: 86:             break;
[e $U 302  ]
"87
[; ;MCAL_Layer/UART/hal_uart.c: 87:         case BAUDRATE_ASYNC_8BIT_HIGH_SPEED:
[e :U 305 ]
"88
[; ;MCAL_Layer/UART/hal_uart.c: 88:             TXSTAbits.SYNC = 0;
[e = . . _TXSTAbits 0 4 -> -> 0 `i `uc ]
"89
[; ;MCAL_Layer/UART/hal_uart.c: 89:             TXSTAbits.BRGH = 1;
[e = . . _TXSTAbits 0 2 -> -> 1 `i `uc ]
"90
[; ;MCAL_Layer/UART/hal_uart.c: 90:             BAUDCONbits.BRG16 = 0;
[e = . . _BAUDCONbits 0 3 -> -> 0 `i `uc ]
"91
[; ;MCAL_Layer/UART/hal_uart.c: 91:             BaudRate_Temp = ((8000000UL /(float)eusar->baudrate)/ 16) - 1;
[e = _BaudRate_Temp - / / -> -> 8000000 `ul `f -> . *U _eusar 0 `f -> -> 16 `i `f -> -> 1 `i `f ]
"92
[; ;MCAL_Layer/UART/hal_uart.c: 92:             break;
[e $U 302  ]
"93
[; ;MCAL_Layer/UART/hal_uart.c: 93:         case BAUDRATE_ASYNC_16BIT_LOW_SPEED:
[e :U 306 ]
"94
[; ;MCAL_Layer/UART/hal_uart.c: 94:             TXSTAbits.SYNC = 0;
[e = . . _TXSTAbits 0 4 -> -> 0 `i `uc ]
"95
[; ;MCAL_Layer/UART/hal_uart.c: 95:             TXSTAbits.BRGH = 0;
[e = . . _TXSTAbits 0 2 -> -> 0 `i `uc ]
"96
[; ;MCAL_Layer/UART/hal_uart.c: 96:             BAUDCONbits.BRG16 = 1;
[e = . . _BAUDCONbits 0 3 -> -> 1 `i `uc ]
"97
[; ;MCAL_Layer/UART/hal_uart.c: 97:             BaudRate_Temp = ((8000000UL /(float)eusar->baudrate)/ 16) - 1;
[e = _BaudRate_Temp - / / -> -> 8000000 `ul `f -> . *U _eusar 0 `f -> -> 16 `i `f -> -> 1 `i `f ]
"98
[; ;MCAL_Layer/UART/hal_uart.c: 98:             break;
[e $U 302  ]
"99
[; ;MCAL_Layer/UART/hal_uart.c: 99:         case BAUDRATE_ASYNC_16BIT_HIGH_SPEED:
[e :U 307 ]
"100
[; ;MCAL_Layer/UART/hal_uart.c: 100:             TXSTAbits.SYNC = 0;
[e = . . _TXSTAbits 0 4 -> -> 0 `i `uc ]
"101
[; ;MCAL_Layer/UART/hal_uart.c: 101:             TXSTAbits.BRGH = 1;
[e = . . _TXSTAbits 0 2 -> -> 1 `i `uc ]
"102
[; ;MCAL_Layer/UART/hal_uart.c: 102:             BAUDCONbits.BRG16 = 1;
[e = . . _BAUDCONbits 0 3 -> -> 1 `i `uc ]
"103
[; ;MCAL_Layer/UART/hal_uart.c: 103:              BaudRate_Temp = ((8000000UL /(float)eusar->baudrate)/ 4) - 1;
[e = _BaudRate_Temp - / / -> -> 8000000 `ul `f -> . *U _eusar 0 `f -> -> 4 `i `f -> -> 1 `i `f ]
"104
[; ;MCAL_Layer/UART/hal_uart.c: 104:             break;
[e $U 302  ]
"105
[; ;MCAL_Layer/UART/hal_uart.c: 105:         case BAUDRATE_SYNC_8BIT:
[e :U 308 ]
"106
[; ;MCAL_Layer/UART/hal_uart.c: 106:             TXSTAbits.SYNC = 1;
[e = . . _TXSTAbits 0 4 -> -> 1 `i `uc ]
"107
[; ;MCAL_Layer/UART/hal_uart.c: 107:             BAUDCONbits.BRG16 = 0;
[e = . . _BAUDCONbits 0 3 -> -> 0 `i `uc ]
"108
[; ;MCAL_Layer/UART/hal_uart.c: 108:             BaudRate_Temp = ((8000000UL /(float)eusar->baudrate)/ 4) - 1;
[e = _BaudRate_Temp - / / -> -> 8000000 `ul `f -> . *U _eusar 0 `f -> -> 4 `i `f -> -> 1 `i `f ]
"109
[; ;MCAL_Layer/UART/hal_uart.c: 109:             break;
[e $U 302  ]
"110
[; ;MCAL_Layer/UART/hal_uart.c: 110:         case BAUDRATE_SYNC_16BIT:
[e :U 309 ]
"111
[; ;MCAL_Layer/UART/hal_uart.c: 111:             TXSTAbits.SYNC = 1;
[e = . . _TXSTAbits 0 4 -> -> 1 `i `uc ]
"112
[; ;MCAL_Layer/UART/hal_uart.c: 112:             BAUDCONbits.BRG16 = 1;
[e = . . _BAUDCONbits 0 3 -> -> 1 `i `uc ]
"113
[; ;MCAL_Layer/UART/hal_uart.c: 113:             BaudRate_Temp = ((8000000UL /(float)eusar->baudrate)/ 4) - 1;
[e = _BaudRate_Temp - / / -> -> 8000000 `ul `f -> . *U _eusar 0 `f -> -> 4 `i `f -> -> 1 `i `f ]
"114
[; ;MCAL_Layer/UART/hal_uart.c: 114:             break;
[e $U 302  ]
"115
[; ;MCAL_Layer/UART/hal_uart.c: 115:         default: ;
[e :U 310 ]
"116
[; ;MCAL_Layer/UART/hal_uart.c: 116:         SPBRG = (uint_8)((uint_32)BaudRate_Temp);
[e = _SPBRG -> -> _BaudRate_Temp `ul `uc ]
"117
[; ;MCAL_Layer/UART/hal_uart.c: 117:         SPBRGH = (uint_8)(((uint_32)BaudRate_Temp) >> 8);
[e = _SPBRGH -> >> -> _BaudRate_Temp `ul -> 8 `i `uc ]
"118
[; ;MCAL_Layer/UART/hal_uart.c: 118:     }
}
[e $U 302  ]
[e :U 303 ]
[e [\ -> . *U _eusar 1 `ui , $ -> . `E3028 0 `ui 304
 , $ -> . `E3028 1 `ui 305
 , $ -> . `E3028 2 `ui 306
 , $ -> . `E3028 3 `ui 307
 , $ -> . `E3028 4 `ui 308
 , $ -> . `E3028 5 `ui 309
 310 ]
[e :U 302 ]
"119
[; ;MCAL_Layer/UART/hal_uart.c: 119: }
[e :UE 301 ]
}
"121
[; ;MCAL_Layer/UART/hal_uart.c: 121: static void EUSART_ASYNC_TX_Init(const usart_t *eusar){
[v _EUSART_ASYNC_TX_Init `(v ~T0 @X0 1 sf1`*CS278 ]
{
[e :U _EUSART_ASYNC_TX_Init ]
[v _eusar `*CS278 ~T0 @X0 1 r1 ]
[f ]
"122
[; ;MCAL_Layer/UART/hal_uart.c: 122:     if(eusar->tx_cfg.usart_tx_enable == 1){
[e $ ! == -> . . *U _eusar 2 1 `i -> 1 `i 312  ]
{
"123
[; ;MCAL_Layer/UART/hal_uart.c: 123:         TXSTAbits.TXEN = 1;
[e = . . _TXSTAbits 0 5 -> -> 1 `i `uc ]
"124
[; ;MCAL_Layer/UART/hal_uart.c: 124:     if(eusar->tx_cfg.usart_tx_interrupt_enable == 1){
[e $ ! == -> . . *U _eusar 2 2 `i -> 1 `i 313  ]
{
"125
[; ;MCAL_Layer/UART/hal_uart.c: 125:         PIE1bits.TXIE = 1;
[e = . . _PIE1bits 0 4 -> -> 1 `i `uc ]
"126
[; ;MCAL_Layer/UART/hal_uart.c: 126:     }
}
[e $U 314  ]
"127
[; ;MCAL_Layer/UART/hal_uart.c: 127:     else if(eusar->tx_cfg.usart_tx_interrupt_enable == 0){
[e :U 313 ]
[e $ ! == -> . . *U _eusar 2 2 `i -> 0 `i 315  ]
{
"128
[; ;MCAL_Layer/UART/hal_uart.c: 128:        PIE1bits.TXIE = 0;
[e = . . _PIE1bits 0 4 -> -> 0 `i `uc ]
"129
[; ;MCAL_Layer/UART/hal_uart.c: 129:     }
}
[e $U 316  ]
"130
[; ;MCAL_Layer/UART/hal_uart.c: 130:     else{}
[e :U 315 ]
{
}
[e :U 316 ]
[e :U 314 ]
"131
[; ;MCAL_Layer/UART/hal_uart.c: 131:     if(eusar->tx_cfg.usart_tx_9bit_enable == 1){
[e $ ! == -> . . *U _eusar 2 3 `i -> 1 `i 317  ]
{
"132
[; ;MCAL_Layer/UART/hal_uart.c: 132:         TXSTAbits.TX9 = 1;
[e = . . _TXSTAbits 0 6 -> -> 1 `i `uc ]
"133
[; ;MCAL_Layer/UART/hal_uart.c: 133:     }
}
[e $U 318  ]
"134
[; ;MCAL_Layer/UART/hal_uart.c: 134:     else if(eusar->tx_cfg.usart_tx_9bit_enable == 0){
[e :U 317 ]
[e $ ! == -> . . *U _eusar 2 3 `i -> 0 `i 319  ]
{
"135
[; ;MCAL_Layer/UART/hal_uart.c: 135:         TXSTAbits.TX9 = 0;
[e = . . _TXSTAbits 0 6 -> -> 0 `i `uc ]
"136
[; ;MCAL_Layer/UART/hal_uart.c: 136:     }
}
[e $U 320  ]
"137
[; ;MCAL_Layer/UART/hal_uart.c: 137:     else{}
[e :U 319 ]
{
}
[e :U 320 ]
[e :U 318 ]
"138
[; ;MCAL_Layer/UART/hal_uart.c: 138:     }
}
[e $U 321  ]
"139
[; ;MCAL_Layer/UART/hal_uart.c: 139:     else{}
[e :U 312 ]
{
}
[e :U 321 ]
"140
[; ;MCAL_Layer/UART/hal_uart.c: 140: }
[e :UE 311 ]
}
"142
[; ;MCAL_Layer/UART/hal_uart.c: 142: static void EUSART_ASYNC_RX_Init(const usart_t *eusar){
[v _EUSART_ASYNC_RX_Init `(v ~T0 @X0 1 sf1`*CS278 ]
{
[e :U _EUSART_ASYNC_RX_Init ]
[v _eusar `*CS278 ~T0 @X0 1 r1 ]
[f ]
"143
[; ;MCAL_Layer/UART/hal_uart.c: 143:   if(eusar->rx_cfg.usart_rx_enable == 1){
[e $ ! == -> . . *U _eusar 3 1 `i -> 1 `i 323  ]
{
"144
[; ;MCAL_Layer/UART/hal_uart.c: 144:       RCSTAbits.CREN = 1;
[e = . . _RCSTAbits 0 4 -> -> 1 `i `uc ]
"145
[; ;MCAL_Layer/UART/hal_uart.c: 145:     if(eusar->rx_cfg.usart_rx_interrupt_enable == 1){
[e $ ! == -> . . *U _eusar 3 2 `i -> 1 `i 324  ]
{
"146
[; ;MCAL_Layer/UART/hal_uart.c: 146:         PIE1bits.RCIE = 1;
[e = . . _PIE1bits 0 5 -> -> 1 `i `uc ]
"147
[; ;MCAL_Layer/UART/hal_uart.c: 147:     }
}
[e $U 325  ]
"148
[; ;MCAL_Layer/UART/hal_uart.c: 148:     else if(eusar->rx_cfg.usart_rx_interrupt_enable == 0){
[e :U 324 ]
[e $ ! == -> . . *U _eusar 3 2 `i -> 0 `i 326  ]
{
"149
[; ;MCAL_Layer/UART/hal_uart.c: 149:        PIE1bits.RCIE = 0;
[e = . . _PIE1bits 0 5 -> -> 0 `i `uc ]
"150
[; ;MCAL_Layer/UART/hal_uart.c: 150:     }
}
[e $U 327  ]
"151
[; ;MCAL_Layer/UART/hal_uart.c: 151:     else{}
[e :U 326 ]
{
}
[e :U 327 ]
[e :U 325 ]
"152
[; ;MCAL_Layer/UART/hal_uart.c: 152:     if(eusar->rx_cfg.usart_rx_9bit_enable == 1){
[e $ ! == -> . . *U _eusar 3 3 `i -> 1 `i 328  ]
{
"153
[; ;MCAL_Layer/UART/hal_uart.c: 153:         RCSTAbits.RX9 = 1;
[e = . . _RCSTAbits 0 6 -> -> 1 `i `uc ]
"154
[; ;MCAL_Layer/UART/hal_uart.c: 154:     }
}
[e $U 329  ]
"155
[; ;MCAL_Layer/UART/hal_uart.c: 155:     else if(eusar->rx_cfg.usart_rx_9bit_enable == 0){
[e :U 328 ]
[e $ ! == -> . . *U _eusar 3 3 `i -> 0 `i 330  ]
{
"156
[; ;MCAL_Layer/UART/hal_uart.c: 156:         RCSTAbits.RX9 = 0;
[e = . . _RCSTAbits 0 6 -> -> 0 `i `uc ]
"157
[; ;MCAL_Layer/UART/hal_uart.c: 157:     }
}
[e $U 331  ]
"158
[; ;MCAL_Layer/UART/hal_uart.c: 158:     else{}
[e :U 330 ]
{
}
[e :U 331 ]
[e :U 329 ]
"159
[; ;MCAL_Layer/UART/hal_uart.c: 159:     }
}
[e $U 332  ]
"160
[; ;MCAL_Layer/UART/hal_uart.c: 160:     else{}
[e :U 323 ]
{
}
[e :U 332 ]
"161
[; ;MCAL_Layer/UART/hal_uart.c: 161: }
[e :UE 322 ]
}
